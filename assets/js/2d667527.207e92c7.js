"use strict";(globalThis.webpackChunkdoctrex=globalThis.webpackChunkdoctrex||[]).push([[748],{4433:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"fetch","title":"Fetch","description":"It returns a Promise that resolves to a Response object.","source":"@site/js/fetch.md","sourceDirName":".","slug":"/fetch","permalink":"/notes-docusaurus/js/fetch","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"async","permalink":"/notes-docusaurus/js/async"},"next":{"title":"JS JS JS JS S","permalink":"/notes-docusaurus/js/intro"}}');var s=r(4848),o=r(8453);const a={},c="Fetch",l={},i=[];function d(e){const n={br:"br",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"fetch",children:"Fetch"})}),"\n",(0,s.jsx)(n.p,{children:"It returns a Promise that resolves to a Response object.\nIt replaces older XMLHttpRequest (XHR), providing a cleaner, promise-based API."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"fetch(url, options)\n  .then((response) => response.json()) // parse JSON\n  .then((data) => console.log(data))\n  .catch((error) => console.error(error));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["options = optional object (method, headers, body, etc.).",(0,s.jsx)(n.br,{}),"\n","fff"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'fetch("https://api.example.com/data")\n  .then((res) => {\n    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n    return res.json();\n  })\n  .then((data) => console.log(data))\n  .catch((err) => console.error("Fetch error:", err));\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"res.ok \u2192 boolean (true if status is 200\u2013299)."}),"\n",(0,s.jsx)(n.li,{children:"res.status \u2192 HTTP status code."}),"\n",(0,s.jsx)(n.li,{children:"res.json() \u2192 parses the body as JSON."}),"\n",(0,s.jsx)(n.li,{children:"res.text() \u2192 gets raw text."}),"\n",(0,s.jsx)(n.li,{children:"res.blob() \u2192 for images, files, etc."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'async function getData() {\n  try {\n    const res = await fetch("https://api.example.com/data");\n    if (!res.ok) throw new Error(`HTTP error! ${res.status}`);\n    const data = await res.json();\n    console.log(data);\n  } catch (err) {\n    console.error("Fetch error:", err);\n  }\n}\n\ngetData();\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const payload = { name: "Alice", age: 25 };\n\nfetch("https://api.example.com/users", {\n  method: "POST", // GET, POST, PUT, DELETE, PATCH\n  headers: {\n    "Content-Type": "application/json",\n  },\n  body: JSON.stringify(payload), // must stringify JS objects\n})\n  .then((res) => {\n    console.log(res.headers.get("Content-Type"));\n    return res.json();\n  })\n  .then((data) => console.log(data))\n  .catch((err) => console.error(err));\n'})}),"\n",(0,s.jsx)(n.h1,{id:"timeout-retry-patterns",children:"Timeout, retry patterns"}),"\n",(0,s.jsx)(n.p,{children:"Timeout + retry patterns are common for production code."}),"\n",(0,s.jsx)(n.p,{children:"Retry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"async function fetchWithRetry(url, retries = 3) {\n  for (let i = 0; i < retries; i++) {\n    try {\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(res.status);\n      return await res.json();\n    } catch (err) {\n      if (i === retries - 1) throw err;\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Timeout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const controller = new AbortController();\nconst signal = controller.signal;\n\nsetTimeout(() => controller.abort(), 5000); // cancel after 5s\n\nfetch("https://api.example.com/data", { signal })\n  .then((res) => res.json())\n  .then((data) => console.log(data))\n  .catch((err) => {\n    if (err.name === "AbortError") console.log("Request timed out");\n    else console.error(err);\n  });\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);