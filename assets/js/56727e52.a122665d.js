"use strict";(globalThis.webpackChunkdoctrex=globalThis.webpackChunkdoctrex||[]).push([[772],{7663:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"intro","title":"clean code by Uncle Bob","description":"- Code rot","source":"@site/notes/clean-code/intro.md","sourceDirName":".","slug":"/intro","permalink":"/notes-docusaurus/clean-code/intro","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar"}');var t=i(4848),o=i(8453);const c={},r="clean code by Uncle Bob",l={},d=[];function a(n){const e={br:"br",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"clean-code-by-uncle-bob",children:"clean code by Uncle Bob"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Code rot"}),"\n",(0,t.jsx)(e.li,{children:"wading code"}),"\n",(0,t.jsx)(e.li,{children:"different schools of thought, like Jiu Jitsu"}),"\n"]}),"\n",(0,t.jsx)(e.h1,{id:"naming",children:"Naming"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"implicit naming vs explicit naming\nexplicit naming when you have those long names, no need to guess. Implicit naming requires mental mapping. C means count."}),"\n",(0,t.jsx)(e.li,{children:"Don't show off your IQ with implicit names, one liners, etc... As a code author, you write for the other devs reading your code."}),"\n",(0,t.jsx)(e.li,{children:"Meaningful distinctions\nMake differences between named things obvious. Bad example"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"getActiveAccount();\ngetActiveAccounts();\ngetActiveAccountInfo();\n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Pronouncable names"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Searchable names"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Avoid encoding if you can"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Type encoding (Hungarian notation). Uncle Bob doesn't like I interface prefix."}),"\n",(0,t.jsxs)(e.li,{children:["Scope encoding. ",(0,t.jsx)(e.code,{children:"m_"})," for class members, in Java. ",(0,t.jsx)(e.code,{children:"global"})," ",(0,t.jsx)(e.code,{children:"tmp"})," etc"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Class/obj - noun, method - verb"}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["No culture dependent jokes like ",(0,t.jsx)(e.code,{children:"eatMyShorts()"})," instead of ",(0,t.jsx)(e.code,{children:"abort()"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["One word per concept\nIf ",(0,t.jsx)(e.code,{children:"add"})," means add to array, then for math addition, use another word like sum"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["Contextual grouping\nstreet, zip, state, country. When not grouped, you stare at ",(0,t.jsx)(e.code,{children:"const state"})," and wonder wtf? but if grouped in",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.code,{children:"mailingAddress.state"})," then it's clear.",(0,t.jsx)(e.br,{}),"\n",'address - in "postal" context it\'s clear. But in other contexts, is it MAC? URL? IP?']}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Renaming in old code is OK. If you can improve things, do it."}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function c(n){const e=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);